I, Dylan Blaine, certify that I participated equitably in the creation of assignment 24A, dated 2022.
I, Jasmine Hernandez, certify that I participated equitably in the creation of this assignment 24A, dated 2022.

commit 06078f7751f6114ac37f76190585aa7cc39baccf (HEAD -> master)
Author: dylpb33 <dblaine@mines.edu>
Date:   Mon Apr 18 21:05:34 2022 -0600

    Refactored move method for the players, more seemless integration with board

commit e6a46107061d1105bad4dfbafb41b5e8e039040a
Author: dylpb33 <dblaine@mines.edu>
Date:   Mon Apr 18 20:49:24 2022 -0600

    Refacotred rollDie to include final static integer for the possible die rolls

commit 4b148e9fc57fd0cb8c77c7bac1a15320ab6defef
Author: dylpb33 <dblaine@mines.edu>
Date:   Mon Apr 18 20:47:02 2022 -0600

    Refactored paintComponent, interacts easier with player methods

commit 2c5b196598afde0f09adf68ecebb292182febccc (origin/master, origin/HEAD)
Author: Jazmine Hernandez <jazminehernandez@Jazmines-MacBook-Pro.local>
Date:   Mon Apr 18 20:29:47 2022 -0600

    Refactored drawCell, painting the doorways from if to switch statements

commit 4a86a198e4d480f339dd4079087580c943a0a7e4
Author: Jazmine Hernandez <jazminehernandez@Jazmines-MacBook-Pro.local>
Date:   Mon Apr 18 19:09:17 2022 -0600

    added comments to selectTargets method

commit 3401ee690c4023c884c0d7eb213c469cf5377417
Author: Jazmine Hernandez <jazminehernandez@Jazmines-MacBook-Pro.local>
Date:   Mon Apr 18 19:04:46 2022 -0600

    Added comments to handleSuggestion method

commit 3d8a99b545529e8cdb5c66a22976990bee8c0e91
Author: Jazmine Hernandez <jazminehernandez@Jazmines-MacBook-Pro.local>
Date:   Mon Apr 18 19:03:07 2022 -0600

    Refactored checkAccusation method to include variables instead of repeating code

commit 0e59ca1c1a5d8303b7a9e1ba8974056ca8469d3a
Author: Jazmine Hernandez <jazminehernandez@Jazmines-MacBook-Pro.local>
Date:   Sat Apr 16 11:08:47 2022 -0600

    fixed target highlight targets method, targets properly displaying

BEFORE:
		if(isDoor) {
			if (doorDirection == DoorDirection.UP) {
				g.setColor(Color.BLUE);
				g.fillRect(xOffset, yOffset-5, width, 5);
			}
			else if (doorDirection == DoorDirection.DOWN) {
				g.setColor(Color.BLUE);
				g.fillRect(xOffset, yOffset + height, width, 5);
			}
			else if (doorDirection == DoorDirection.LEFT) {
				g.setColor(Color.BLUE);
				g.fillRect(xOffset-5, yOffset, 5, height);
			}
			else if (doorDirection == DoorDirection.RIGHT) {
				g.setColor(Color.BLUE);
				g.fillRect(xOffset + width, yOffset, 5, height);
			}
		}




AFTER:
		if(isDoor) {
			g.setColor(Color.BLUE);
			switch (doorDirection) {
			case UP: 
				g.fillRect(xOffset, yOffset-5, width, 5);
				break;
			case DOWN: 
				g.fillRect(xOffset, yOffset + height, width, 5);
				break;
			case LEFT: 
				g.fillRect(xOffset-5, yOffset, 5, height);
				break;
			case RIGHT: 
				g.fillRect(xOffset + width, yOffset, 5, height);
				break;
			}
		}

Before:

	public void processNext(GameControlPanel controlPanel) {
		if(isFinished) {
			//Update current player
			currPlayerNum = (currPlayerNum + 1) % Players.size();
			currentPlayer = Players.get(currPlayerNum);

			//Roll the dice
			Random rand = new Random();

			int roll = rand.nextInt(ROLL_NUM) + 1;

			//Calc Targets
			calcTargets(getCell(Players.get(currPlayerNum).getRow(), Players.get(currPlayerNum).getColumn()), roll);

			//Update Game control Panel
			controlPanel.setTurn(currentPlayer, roll);

			//Is new player human?
			if(currentPlayer instanceof HumanPlayer) {
				//Flag unfinished
				isFinished = false;
			}
			// otherwise the computer moves
			else {
				currentPlayer.Move();
			}
			repaint();
		}
		// displays this message if Human selects next before finishing their turn
		else {
			JOptionPane.showMessageDialog(null, "Please finish your turn!");
		}
	}

After:

	//generates a random number between 1 and 6
	public int rollDie() {
		Random rand = new Random();
		return rand.nextInt(ROLL_NUM) + 1;
	}
	
	public void processNext(GameControlPanel controlPanel) {
		if(isFinished) {
			//Update current player
			currPlayerNum = (currPlayerNum + 1) % Players.size();
			currentPlayer = Players.get(currPlayerNum);

			//Roll the dice
			int roll = rollDie();

			//Calc Targets
			calcTargets(getCell(Players.get(currPlayerNum).getRow(), Players.get(currPlayerNum).getColumn()), roll);

			//Update Game control Panel
			controlPanel.setTurn(currentPlayer, roll);

			//Is new player human?
			if(currentPlayer instanceof HumanPlayer) {
				//Flag unfinished
				isFinished = false;
			}
			// otherwise the computer moves
			else {
				currentPlayer.Move();
			}
			repaint();
		}
		// displays this message if Human selects next before finishing their turn
		else {
			JOptionPane.showMessageDialog(null, "Please finish your turn!");
		}
	}


